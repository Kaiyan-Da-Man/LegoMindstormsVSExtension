{
	"name": "mind-reader",
	"displayName": "Mind_Reader",
	"repository": "https://github.com/We-Dont-Byte/Mind_Reader",
	"version": "1.0.0",
	"engines": {
		"vscode": "^1.60.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onStartupFinished"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [{
				"command": "mind-reader.helloWorld",
				"title": "Hello World"
			},
			{
				"command": "mind-reader.increaseFontScale",
				"title": "Increase Font Scale"
			},
			{
				"command": "mind-reader.decreaseFontScale",
				"title": "Decrease Font Scale"
			},
			{
				"command": "mind-reader.resetFontScale",
				"title": "Reset Font Scale"
			},
			{
				"command": "mind-reader.increaseEditorScale",
				"title": "Increase Editor Scale"
			},
			{
				"command": "mind-reader.decreaseEditorScale",
				"title": "Decrease Editor Scale"
			},
			{
				"command": "mind-reader.resetEditorScale",
				"title": "Reset Editor Scale"
			},
			{
				"command": "mind-reader.selectTheme",
				"title": "Select Theme"
			},
			{
				"command": "mind-reader.openWebview",
				"title": "Mind Reader Webview"
			},
			{
				"command": "mind-reader.openKeyBindWin",
				"title": "Key Bindings for Windows"
			},
			{
				"command": "mind-reader.openKeyBindMac",
				"title": "Key Bindings for Mac"
			},
			{
				"command": "mind-reader.runLineContext",
				"title": "Run Line Context"
			},
			{
				"command": "mind-reader.runCursorContext",
				"title": "Run Cursor Context"
			},
			{
				"command": "mind-reader.getIndent",
				"title": "Get Line Indentation"
			},
			{
				"command": "mind-reader.connectHub",
				"title": "Connect LEGO Hub"
			},
			{
				"command": "mind-reader.disconnectHub",
				"title": "Disconnect LEGO Hub"
			},
			{
				"command": "mind-reader.uploadCurrentFile",
				"title": "Upload current file to LEGO Hub"
			},
			{
				"command": "mind-reader.runProgram",
				"title": "Run a program from the LEGO Hub"
			},
			{
				"command": "mind-reader.stopExecution",
				"title": "Stop running program on the LEGO Hub"
			},
			{
				"command": "mind-reader.deleteProgram",
				"title": "Delete a program from the LEGO Hub"
			}
		],
		"keybindings": [{
				"command": "mind-reader.decreaseFontScale",
				"key": "numpad_subtract",
				"mac": "d"
			},
			{
				"command": "mind-reader.increaseFontScale",
				"key": "numpad_add",
				"mac": "[NumpadAdd]"
			},
			{
				"command": "mind-reader.increaseEditorScale",
				"key": "shift+numpad_add",
				"mac": "Shift+[NumpadAdd]"
			},
			{
				"command": "mind-reader.decreaseEditorScale",
				"key": "shift+numpad_subtract",
				"mac": "Shift+[NumpadSubtract]"
			},
			{
				"command": "mind-reader.resetEditorScale",
				"key": "shift+enter",
				"mac": "Shift+[Enter]"
			},
			{
				"command": "mind-reader.showAllSymbols",
				"key": "Ctrl+T",
				"mac": "Cmd+[KeyT]"
			},
			{
				"command": "mind-reader.gotoLine",
				"key": "CTRL+G",
				"mac": "Cmd+[KeyG]"
			},
			{
				"command": "mind-reader.quickOpen",
				"key": "CTRL+P",
				"mac": "Cmd+[KeyP]"
			},
			{
				"command": "mind-reader.gotoSymbol",
				"key": "Ctrl+Shift+O",
				"mac": "Cmd+Shift+[KeyO]"
			},
			{
				"command": "mind-reader.showProblems",
				"key": "Ctrl+Shift+M",
				"mac": "Cmd+Shift+[KeyM]"
			},
			{
				"command": "mind-reader.nextInFiles",
				"key": "F8",
				"mac": "[F8]"
			},
			{
				"command": "mind-reader.prevInFiles",
				"key": "Shift+F8",
				"mac": "Shift+[F8]"
			},
			{
				"command": "mind-reader.quickOpenPreviousRecentlyUsedEditorInGroup",
				"key": "Ctrl+Tab",
				"mac": "Cmd+[Tab]"
			},
			{
				"command": "mind-reader.navigateBack",
				"key": "Ctrl+Alt+-",
				"mac": "Cmd+Alt+[Minus]"
			},
			{
				"command": "mind-reader.getQuickInputBack",
				"key": "Ctrl+Alt+-",
				"mac": "Cmd+Alt+[Minus]"
			},
			{
				"command": "mind-reader.navigateForward",
				"key": "Ctrl+Shift+-",
				"mac": "Cmd+Shift+[Minus]"
			},
			{
				"command": "mind-reader.selectTheme",
				"key": "Ctrl+Shift+1",
				"mac": "Cmd+Shift+[Digit1]"
			},
			{
				"command": "mind-reader.getIndent",
				"key": "Shift+Tab",
				"mac": "Shift+[Tab]"
			},
			{
				"command": "mind-reader.openKeyBindWin",
				"key": "Ctrl+Shift+8",
				"mac": "Cmd+Shift+8"
			},
			{
				"command": "mind-reader.openKeyBindMac",
				"key": "Ctrl+Shift+9",
				"mac": "Cmd+Shift+9"
			}
		],
		"menus": {
			"editor/context": [{
				"submenu": "mind-reader.editor.context",
				"group": "mind-reader"
			}],
			"mind-reader.editor.context": [{
					"command": "mind-reader.increaseEditorScale",
					"group": "mind-reader",
					"when": "activeEditor"
				},
				{
					"command": "mind-reader.decreaseFontScale",
					"group": "mind-reader",
					"when": "activeEditor"
				},
				{
					"command": "mind-reader.resetFontScale",
					"group": "mind-reader",
					"when": "activeEditor"
				},
				{
					"command": "mind-reader.increaseEditorScale",
					"group": "mind-reader",
					"when": "activeEditor"
				},
				{
					"command": "mind-reader.decreaseEditorScale",
					"group": "mind-reader",
					"when": "activeEditor"
				},
				{
					"command": "mind-reader.resetEditorScale",
					"group": "mind-reader",
					"when": "activeEditor"
				},
				{
					"command": "mind-reader.selectTheme",
					"group": "mind-reader",
					"when": "activeEditor"
				},
				{
					"command": "mind-reader.openWebview",
					"group": "mind-reader",
					"when": "activeEditor"
				},
				{
					"command": "mind-reader.openKeyBindWin",
					"group": "mind-reader",
					"when": "activeEditor"
				},
				{
					"command": "mind-reader.openKeyBindMac",
					"group": "mind-reader",
					"when": "activeEditor"
				}
			]
		},
		"submenus": [{
			"id": "mind-reader.editor.context",
			"label": "Mind_Reader"
		}],
		"configuration": {
			"title": "Mind_Reader",
			"properties": {
				"mindReader.productType": {
					"type": "string",
					"description": "Specifies the LEGO® product.",
					"default": "MINDSTORMS EV3",
					"enum": [
						"MINDSTORMS EV3",
						"SPIKE Prime"
					],
					"enumDescriptions": [
						"LEGO® MINDSTORMS® EV3 (31313)",
						"LEGO® Education SPIKE™ Prime Set (45678)"
					]
				},
				"mindReader.reader.screenReader": {
					"type": "string",
					"description": "Specifies which screen reader to optimize for.",
					"default": "NVDA",
					"enum": [
						"NVDA",
						"Orca",
						"VoiceOver"
					],
					"enumDescriptions": [
						"NonVisual Desktop Access (Windows)",
						"Orca (Linux)",
						"Apple VoiceOver (macOS)"
					]
				},
				"mindReader.reader.contextWindow": {
					"type": "number",
					"description": "The number of words around the cursor to use when reading the cursor context",
					"default": 1
				},
				"mindReader.connection.portPath": {
					"type": "string",
					"markdownDescription": "The default port to try and establish a connection on."
				},
				"mindReader.lineHighlighter.isEnabled": {
					"type": "boolean",
					"description": "Enable/Disable the line highlighter",
					"default": "true"
				},
				"mindReader.lineHighlighter.multiLineIsEnabled": {
					"type": "boolean",
					"description": "Turn off the line highlighter if highlighting multiple lines",
					"default": "false"
				},
				"mindReader.lineHighlighter.backgroundColor": {
					"type": "string",
					"markdownDescription": "Set the background color of the line highlighter",
					"default": "#232C5C"
				},
				"mindReader.lineHighlighter.outlineColor": {
					"type": "string",
					"markdownDescription": "Set the outline color of the line highlighter",
					"default": "#4866FE"
				},
				"mindReader.lineHighlighter.outlineWidth": {
					"type": "string",
					"markdownDescription": "Set the outline width of the line highlighter",
					"default": "1px"
				},
				"mindReader.lineHighlighter.outlineStyle": {
					"type": "string",
					"markdownDescription": "Set the outline style of the line highlighter",
					"default": "solid"
				},
				"mindReader.lineHighlighter.borderColorTop": {
					"type": "string",
					"markdownDescription": "Set the top border color of the line highlighter",
					"default": "#FFFFFF"
				},
				"mindReader.lineHighlighter.borderColorRight": {
					"type": "string",
					"markdownDescription": "Set the right border color of the line highlighter",
					"default": "#FFFFFF"
				},
				"mindReader.lineHighlighter.borderColorBottom": {
					"type": "string",
					"markdownDescription": "Set the bottom border color of the line highlighter",
					"default": "#FFFFFF"
				},
				"mindReader.lineHighlighter.borderColorLeft": {
					"type": "string",
					"markdownDescription": "Set the left border color of the line highlighter",
					"default": "#FFFFFF"
				},
				"mindReader.lineHighlighter.borderWidthTop": {
					"type": "string",
					"markdownDescription": "Set the top border width of the line highlighter",
					"default": "1px"
				},
				"mindReader.lineHighlighter.borderWidthRight": {
					"type": "string",
					"markdownDescription": "Set the right border width of the line highlighter",
					"default": "16px"
				},
				"mindReader.lineHighlighter.borderWidthBottom": {
					"type": "string",
					"markdownDescription": "Set the bottom border width of the line highlighter",
					"default": "1px"
				},
				"mindReader.lineHighlighter.borderWidthLeft": {
					"type": "string",
					"markdownDescription": "Set the left border width of the line highlighter",
					"default": "1px"
				},
				"mindReader.lineHighlighter.borderStyleTop": {
					"type": "string",
					"markdownDescription": "Set the top border style of the line highlighter",
					"default": "solid"
				},
				"mindReader.lineHighlighter.borderStyleRight": {
					"type": "string",
					"markdownDescription": "Set the right border style of the line highlighter",
					"default": "solid"
				},
				"mindReader.lineHighlighter.borderStyleBottom": {
					"type": "string",
					"markdownDescription": "Set the bottom border style of the line highlighter",
					"default": "solid"
				},
				"mindReader.lineHighlighter.borderStyleLeft": {
					"type": "string",
					"markdownDescription": "Set the left border style of the line highlighter",
					"default": "solid"
				},
				"mindReader.lineHighlighter.fontStyle": {
					"type": "string",
					"markdownDescription": "Set the font style of the line highlighter",
					"default": "normal"
				},
				"mindReader.lineHighlighter.fontWeight": {
					"type": "string",
					"markdownDescription": "Set the font weight of the line highlighter",
					"default": "bolder"
				},
				"mindReader.lineHighlighter.textDecoration": {
					"type": "string",
					"markdownDescription": "Set the text decoration of the line highlighter",
					"default": "none"
				},
				"mindReader.lineHighlighter.textColor": {
					"type": "string",
					"markdownDescription": "Set the text color of the line highlighter",
					"default": "#FFFFFF"
				}
			}
		},
		"views": {
			"MindReader": [{
					"id": "accessActions",
					"name": "Access Actions",
					"icon": "media/dep.svg",
					"contextualTitle": "Accessibility Menu Actions"
				},
				{
					"id": "hubActions",
					"name": "Hub Actions",
					"icon": "media/dep.svg",
					"contextualTitle": "Hub Connection Actions"
				}
			]
		},
		"viewsContainers": {
			"activitybar": [{
				"id": "MindReader",
				"title": "MindReader Actions",
				"icon": "media/dep.svg"
			}]
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.2.2",
		"@types/node": "16.x",
		"@types/serialport": "^8.0.2",
		"@types/vscode": "^1.60.0",
		"@typescript-eslint/eslint-plugin": "^4.26.0",
		"@typescript-eslint/parser": "^4.26.0",
		"@vscode/test-electron": "^1.6.2",
		"eslint": "^7.27.0",
		"glob": "^7.1.7",
		"mocha": "^8.4.0",
		"typescript": "^4.3.2",
		"vscode-test": "^1.5.2"
	},
	"dependencies": {
		"serialport": "^9.2.5"
	}
}
